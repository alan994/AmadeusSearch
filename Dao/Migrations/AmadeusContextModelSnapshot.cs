// <auto-generated />
using Dao;
using Dto.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Dao.Migrations
{
    [DbContext(typeof(AmadeusContext))]
    partial class AmadeusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dto.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ArrivalDate");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DepartureAirportIata");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("DestinationAirportIata");

                    b.Property<int>("NumberOfInterchanges");

                    b.Property<int>("NumberOfPassengers");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Dto.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("Currency");

                    b.Property<int>("InboundFlightId");

                    b.Property<int>("OutboundFlightId");

                    b.Property<decimal>("PricePerPerson");

                    b.Property<int>("SearchId");

                    b.Property<decimal>("TotalPrice");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("InboundFlightId");

                    b.HasIndex("OutboundFlightId");

                    b.HasIndex("SearchId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Dto.Models.Search", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("Currency");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("date");

                    b.Property<string>("DestinationAirportIata");

                    b.Property<int>("NumberOfPassengers");

                    b.Property<string>("OriginAirportIata");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("Dto.Models.Option", b =>
                {
                    b.HasOne("Dto.Models.Flight", "InboundFlight")
                        .WithMany()
                        .HasForeignKey("InboundFlightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dto.Models.Flight", "OutboundFlight")
                        .WithMany()
                        .HasForeignKey("OutboundFlightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dto.Models.Search", "Search")
                        .WithMany()
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
